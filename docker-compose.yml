version: "3.9"

services:

  # A customized instance of collectivo for MILA.
  collectivo:
    container_name: collectivo-mila
    restart: always
    image: milawien/collectivo:v0.3.0
    volumes:
      - ./collectivo_extensions:/collectivo-app/collectivo_extensions
      - ./docker/static:/app/static
    command: >
       sh -c "while ! nc -z collectivo-db 5432; do sleep 1; done &&
              while ! nc -z keycloak 8080; do sleep 1; done &&
              python manage.py migrate &&
              gunicorn collectivo_app.wsgi:application --bind 0.0.0.0:8000
              "
    environment:
      DB_HOST: collectivo-db
      DB_NAME: collectivo_db
      DB_USER: ${COLLECTIVO_DB_USER}
      DB_PASS: ${COLLECTIVO_DB_PASSWORD}
      SECRET_KEY: ${COLLECTIVO_SECRET_KEY}
      KEYCLOAK_CLIENT_ID: collectivo
      KEYCLOAK_REALM_NAME: collectivo
      KEYCLOAK_SERVER_URL: ${COLLECTIVO_KEYCLOAK_SERVER_URL}
      KEYCLOAK_CLIENT_SECRET_KEY: ${KEYCLOAK_CLIENT_SECRET_KEY}
      COLLECTIVO_SETTINGS: collectivo_extensions.settings
      COLLECTIVO_EXTENSIONS: members
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_USE_SSL: ${EMAIL_USE_SSL}
      EMAIL_FROM: ${EMAIL_FROM}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      ALLOWED_HOSTS: ${COLLECTIVO_URL}
      CORS_ALLOWED_ORIGINS: https://${COLLECTIVO_UX_URL}
      VIRTUAL_HOST: ${COLLECTIVO_URL}
      VIRTUAL_PORT: 8000
      LETSENCRYPT_HOST: ${COLLECTIVO_URL}
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
      CELERY_BROKER: redis://redis:6379/0
      CELERY_BACKEND: redis://redis:6379/0
    labels:
          io.portainer.accesscontrol.teams: mila
    depends_on:
      - collectivo-db
      - keycloak
    links:
      - keycloak

  # A celery worker that runs in the background.
  # Image & environment should be the same as collectivo-mila.
  celery:
    container_name: celery
    restart: always
    image: milawien/collectivo:v0.3.0
    command: celery -A collectivo_app worker -l info
    volumes:
      - ./collectivo_extensions:/collectivo-app/collectivo_extensions
      - ./docker/static:/app/static
    environment:
      DB_HOST: collectivo-db
      DB_NAME: collectivo_db
      DB_USER: ${COLLECTIVO_DB_USER}
      DB_PASS: ${COLLECTIVO_DB_PASSWORD}
      SECRET_KEY: ${COLLECTIVO_SECRET_KEY}
      KEYCLOAK_CLIENT_ID: collectivo
      KEYCLOAK_REALM_NAME: collectivo
      KEYCLOAK_SERVER_URL: ${COLLECTIVO_KEYCLOAK_SERVER_URL}
      KEYCLOAK_CLIENT_SECRET_KEY: ${KEYCLOAK_CLIENT_SECRET_KEY}
      COLLECTIVO_SETTINGS: collectivo_extensions.settings
      COLLECTIVO_EXTENSIONS: members
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_USE_SSL: ${EMAIL_USE_SSL}
      EMAIL_FROM: ${EMAIL_FROM}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      ALLOWED_HOSTS: ${COLLECTIVO_URL}
      CORS_ALLOWED_ORIGINS: https://${COLLECTIVO_UX_URL}
      VIRTUAL_HOST: ${COLLECTIVO_URL}
      VIRTUAL_PORT: 8000
      LETSENCRYPT_HOST: ${COLLECTIVO_URL}
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
      CELERY_BROKER: redis://redis:6379/0
      CELERY_BACKEND: redis://redis:6379/0
    depends_on:
      - collectivo
      - redis

  # A communication broker for celery.
  redis:
    container_name: redis
    image: redis:7.0-alpine

  # A static files server for django.
  collectivo-static:
    container_name: colletivo-mila-static
    image: nginx:alpine
    volumes:
      - ./docker/static:/app/static
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf
      - ./docker/nginx/error.html:/usr/share/nginx/html/index.html
    restart: always
    labels:
      io.portainer.accesscontrol.teams: mila

  nginx-proxy:
    image: nginxproxy/nginx-proxy:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/logs:/var/log/nginx
      - ./nginx/conf.d:/etc/nginx/conf.d:rw
      - ./certs:/etc/nginx/certs:ro
      - /usr/share/nginx/html
      - ./nginx/vhost.d:/etc/nginx/vhost.d:rw
      - ./nginx/html:/usr/share/nginx/html
      - ./nginx/dhparam:/etc/nginx/dhparam
      - /var/run/docker.sock:/tmp/docker.sock:ro
    restart: always
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy"

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion:dev
    container_name: letsencrypt
    volumes_from:
      - nginx-proxy
    volumes:
      - ./certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:rw

  # A PostgreSQL database.
  collectivo-db:
    container_name: collectivo-mila-db
    image: postgres:14-alpine
    volumes:
      - collectivo-db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: collectivo_db
      POSTGRES_USER: ${COLLECTIVO_DB_USER}
      POSTGRES_PASSWORD: ${COLLECTIVO_DB_PASSWORD}
    labels:
      io.portainer.accesscontrol.teams: mila

  # A frontend web application.
  collectivo-ux:
    container_name: collectivo-mila-ux
    image: milawien/collectivo-ux:v0.2.1
    restart: always
    environment:
      VIRTUAL_HOST: ${COLLECTIVO_UX_URL}
      VIRTUAL_PORT: 80
      LETSENCRYPT_HOST: ${COLLECTIVO_UX_URL}
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
      VITE_APP_API: ${COLLECTIVO_UX_API_URL}
      VITE_KEYCLOAK_URL: ${COLLECTIVO_UX_KEYCLOAK_URL}
    labels:
      io.portainer.accesscontrol.teams: mila

  # Database for keycloak
  keycloak-db:
    container_name: keycloak-db
    image: postgres:14-alpine
    volumes:
      - keycloak-db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: ${KEYCLOAK_DB_USER}
      POSTGRES_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
    labels:
      io.portainer.accesscontrol.teams: mila

  # Keycloak for authentication.
  keycloak:
    build: ./docker/keycloak
    container_name: collectivo-mila-keycloak
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KEYCLOAK_FRONTEND_URL: ${KEYCLOAK_SERVER_URL}
      KEYCLOAK_IMPORT: /tmp/collectivo-realm.json
      KC_DB_USERNAME: ${KEYCLOAK_DB_USER}
      KC_DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
      KC_DB_SCHEMA: public
      KC_DB_URL_DATABASE: ${KEYCLOAK_DB_NAME}
      KC_DB_URL_HOST: ${KEYCLOAK_DB_HOST}
      KC_DB_URL_PORT: 5432
      KC_HOSTNAME: ${KEYCLOAK_SERVER_URL}
      VIRTUAL_HOST: ${KEYCLOAK_SERVER_URL}
      VIRTUAL_PORT: 8080
      LETSENCRYPT_HOST: ${KEYCLOAK_SERVER_URL}
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
    volumes:
      - ./docker/keycloak/import/collectivo-realm.json:/tmp/collectivo-realm.json
      - ./docker/keycloak/themes/collectivo:/opt/keycloak/themes/collectivo
      - ./docker/keycloak/imported/:/opt/keycloak/imported/
    depends_on:
      - keycloak-db
    links:
      - keycloak-db
    labels:
      io.portainer.accesscontrol.teams: mila

volumes:
  collectivo-db-data:
  keycloak-db-data:
